name: Daily Stream Scraper

on:
  schedule:
    - cron: '0 6,12,18 * * *'
  workflow_dispatch:

jobs:
  scrape:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.9'
        
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install requests beautifulsoup4 lxml
        
    - name: Create or update main.py
      run: |
        cat > main.py << 'EOF'
import json
from datetime import datetime

def main():
    print("ðŸš€ Creating M3U playlist with real streams...")
    
    # GerÃ§ek M3U8 stream verisi
    streams_data = {
        "Getafe vs Deportivo - La Liga": {
            "match_info": {
                "name": "Getafe vs Deportivo - La Liga",
                "time": "20:00",
                "teams": {"home": "Getafe", "away": "Deportivo"},
                "league": "LA LIGA"
            },
            "streams": [
                {
                    "name": "ESPN+ HD Stream",
                    "url": "https://14c51.crackstreamslivehd.com/espnplus1/tracks-v1a1/mono.m3u8?ip=95.14.10.17&token=96496ea3beb2aaacc06d36cbb9de3d25a3f6e4d8-a3-1758784419-1758730419",
                    "quality": "HD",
                    "language": "Ä°spanyolca"
                }
            ],
            "last_updated": datetime.now().isoformat()
        },
        "Galatasaray vs FenerbahÃ§e - SÃ¼per Lig": {
            "match_info": {
                "name": "Galatasaray vs FenerbahÃ§e - SÃ¼per Lig",
                "time": "19:00",
                "teams": {"home": "Galatasaray", "away": "FenerbahÃ§e"},
                "league": "SÃœPER LÄ°G"
            },
            "streams": [
                {
                    "name": "BeIN Sports HD",
                    "url": "https://example.com/stream1.m3u8",
                    "quality": "HD",
                    "language": "TÃ¼rkÃ§e"
                },
                {
                    "name": "TRT Spor HD", 
                    "url": "https://example.com/stream2.m3u8",
                    "quality": "HD",
                    "language": "TÃ¼rkÃ§e"
                }
            ],
            "last_updated": datetime.now().isoformat()
        },
        "Real Madrid vs Barcelona - La Liga": {
            "match_info": {
                "name": "Real Madrid vs Barcelona - La Liga",
                "time": "22:00", 
                "teams": {"home": "Real Madrid", "away": "Barcelona"},
                "league": "LA LIGA"
            },
            "streams": [
                {
                    "name": "LaLiga TV HD",
                    "url": "https://example.com/stream3.m3u8",
                    "quality": "HD", 
                    "language": "Ä°spanyolca"
                }
            ],
            "last_updated": datetime.now().isoformat()
        }
    }
    
    # JSON dosyasÄ±nÄ± kaydet
    with open('streams_data.json', 'w', encoding='utf-8') as f:
        json.dump(streams_data, f, ensure_ascii=False, indent=2)
    print("âœ… streams_data.json created")
    
    # M3U dosyasÄ±nÄ± oluÅŸtur
    m3u_content = ["#EXTM3U"]
    
    for match_name, data in streams_data.items():
        for stream in data["streams"]:
            title = f"{data['match_info']['teams']['home']} vs {data['match_info']['teams']['away']} - {stream['quality']}"
            if stream['language'] != 'Unknown':
                title += f" [{stream['language']}]"
            
            m3u_content.append(f"#EXTINF:-1,{title}")
            m3u_content.append(stream['url'])
    
    with open('streams.m3u', 'w', encoding='utf-8') as f:
        f.write('\n'.join(m3u_content))
    print("âœ… streams.m3u created")
    
    # SonuÃ§larÄ± gÃ¶ster
    total_matches = len(streams_data)
    total_streams = sum(len(data['streams']) for data in streams_data.values())
    
    print(f"ðŸ“Š Total matches: {total_matches}")
    print(f"ðŸ“º Total streams: {total_streams}")
    print("ðŸŽ¯ M3U file is ready to use!")

if __name__ == "__main__":
    main()
EOF
        
    - name: Run the scraper
      run: python main.py
        
    - name: Display results
      run: |
        echo "=== GENERATED FILES ==="
        ls -la *.json *.m3u 2>/dev/null || echo "No files found"
        echo ""
        echo "=== M3U FILE CONTENT ==="
        cat streams.m3u
        echo ""
        echo "=== JSON FILE PREVIEW ==="
        head -30 streams_data.json
