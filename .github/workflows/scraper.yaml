name: Daily Stream Scraper

on:
  workflow_dispatch:

jobs:
  scrape:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.9'
        
    - name: Generate M3U file
      run: |
        cat > generate_streams.py << 'EOF'
import json
from datetime import datetime

# Create sample data with REAL M3U8 links
data = {
    "matches": [
        {
            "name": "Getafe vs Deportivo",
            "time": "20:00",
            "league": "La Liga",
            "streams": [
                {
                    "name": "ESPN+ HD",
                    "url": "https://14c51.crackstreamslivehd.com/espnplus1/tracks-v1a1/mono.m3u8?ip=95.14.10.17&token=96496ea3beb2aaacc06d36cbb9de3d25a3f6e4d8-a3-1758784419-1758730419",
                    "quality": "HD"
                }
            ]
        }
    ],
    "generated_at": datetime.now().isoformat()
}

# Save JSON
with open('streams_data.json', 'w') as f:
    json.dump(data, f, indent=2)

# Create M3U
m3u_content = """#EXTM3U
#EXTINF:-1,Getafe vs Deportivo - HD
https://14c51.crackstreamslivehd.com/espnplus1/tracks-v1a1/mono.m3u8?ip=95.14.10.17&token=96496ea3beb2aaacc06d36cbb9de3d25a3f6e4d8-a3-1758784419-1758730419
#EXTINF:-1,Galatasaray vs Fenerbahce - HD
https://example.com/stream2.m3u8"""

with open('streams.m3u', 'w') as f:
    f.write(m3u_content)

print("Files generated successfully!")
EOF
        
        python generate_streams.py
        
    - name: Show files
      run: |
        echo "=== FILES ==="
        ls -la
        echo "=== M3U CONTENT ==="
        cat streams.m3u
        
    - name: Upload artifacts
      uses: actions/upload-artifact@v4
      with:
        name: stream-files
        path: |
          streams.m3u
          streams_data.json
        retention-days: 30
